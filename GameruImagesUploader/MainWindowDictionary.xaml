<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:res="clr-namespace:GameruImagesUploader.Properties">

    <!-- NOTE
    The color change in controls occurs through duplication of an element with the desired color and change its transparency
    This is because it is impossible to directly specify the color from the application settings in ColorAnimation -->

    <!-- Default button style -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="RectangleBackground"
                                   Fill="{Binding ColorButtonBackground, Source={x:Static res:Settings.Default}}"/>
                        <Rectangle x:Name="ColorButtonBackgroundHighlighted"
                                   Fill="{Binding ColorButtonBackgroundHighlighted, Source={x:Static res:Settings.Default}}" 
                                   Opacity="0"/>
                        <Rectangle Fill="{TemplateBinding Foreground}"
                                   Margin="5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ColorButtonBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"
                                                     To="1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ColorButtonBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ColorButtonBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"
                                                     To="0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ColorButtonBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"
                                                     To="1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Flip button style -->
    <Style x:Key="ButtonStyleFlip"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- Transparent Background in Grid needed for the correct functioning of triggers -->
                    <Grid Background="#00000000">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   RenderTransformOrigin="0.5,0.5"
                                   Margin="5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="ScaleTransform"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     Duration="0:0:0.25"
                                                     To="-1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Login button style -->
    <Style x:Key="ButtonStyleLogin" 
		TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Rectangle" 
                                   Fill="{TemplateBinding Background}">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="Resources/ImageAvatarOpacityMask.png"
                                            Stretch="Uniform"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Rectangle Fill="{TemplateBinding Foreground}"
                                   Stretch="Uniform"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Rotate button style-->
    <Style x:Key="ButtonStyleRotate"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- Transparent Background in Grid (and Grid itself) needed for the correct functioning of triggers -->
                    <Grid Background="#00000000">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   RenderTransformOrigin="0.5,0.5"
                                   Margin="5">
                            <Rectangle.RenderTransform>
                                <RotateTransform x:Name="RotateTransform"
                                                 Angle="0"/>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                     Storyboard.TargetProperty="Angle"
                                                     RepeatBehavior="Forever"
                                                     Duration="0:0:0.3"
                                                     To="60"/>
                                    <!-- 60 = 360 / 6 (number of gear teeth on the image) -->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                     Storyboard.TargetProperty="Angle"
                                                     Duration="0:0:0.2"
                                                     To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox style -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border"
                            Background="{Binding ColorComboBoxItemBackground, Source={x:Static res:Settings.Default}}">
                        <Grid>
                            <Rectangle x:Name="ComboBoxItemBackgroundHighlighted"
                                       Fill="{Binding ColorComboBoxItemBackgroundHighlighted, Source={x:Static res:Settings.Default}}"
                                       Opacity="0"/>
                            <TextBlock Margin="5">
                            <ContentPresenter />
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter" 
                                      SourceName="Border">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ComboBoxItemBackgroundHighlighted"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.15"
                                                         To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" 
                                      SourceName="Border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ComboBoxItemBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" 
           TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="ComboBoxBackgroundHighlighted" 
                                   Fill="{Binding ColorComboBoxBackgroundHighlighted, Source={x:Static res:Settings.Default}}"
                                   Grid.ColumnSpan="2"
                                   Opacity="0"/>
                        <Path x:Name="Arrow"
                              Data="M 0 0 L 5 6 L 10 0 Z"
                              Fill="White"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ComboBoxBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"
                                                     To="1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ComboBoxBackgroundHighlighted"
                                                     Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" 
                Value="{Binding ColorComboBoxForeground, Source={x:Static res:Settings.Default}}" />
        <Setter Property="Background" 
                Value="{Binding ColorComboBoxBackground, Source={x:Static res:Settings.Default}}" />
        <Setter Property="SnapsToDevicePixels" 
                Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" 
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Background="{TemplateBinding Background}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          Margin="5,5,20,5"/>
                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained"
                                                IsItemsHost="True"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox style -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" 
                Value="{Binding ColorListBoxBackground, Source={x:Static res:Settings.Default}}"/>
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                            Background="{Binding ColorListBoxBackground, Source={x:Static res:Settings.Default}}">
                        <ScrollViewer Margin="0"
                                      Focusable="false">
                            <WrapPanel ItemWidth="{Binding ItemSize, Source={x:Static res:Settings.Default}}"
                                       IsItemsHost="True"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" 
                Value="0"/>
        <Setter Property="Margin" 
                Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" 
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="ScaleTransform"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     Duration="0:0:0.1"
                                                     To="1.05"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     Duration="0:0:0.1"
                                                     To="1.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     Duration="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" 
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Opancity">
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.1"
                                                         To="0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Opancity">
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>